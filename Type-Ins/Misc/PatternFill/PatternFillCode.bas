10 REM         Pattern Fill
20 REM       By Ian C. Sharpe
30 REM (c)Computing with the Amstrad
40 REM ------------ CPC ------------
50 IF HIMEM<&93C6 THEN PRINT"Sorry! Not enough memory - switch off a rom or two"
60 MEMORY &8FFF:ln=150
70 FOR adr=&9000 TO &91B8 STEP 13
80 READ byte$:chk=0
90 FOR i=0 TO 12
100 v=VAL("&"+MID$(byte$,i*2+1,2))
110 POKE adr+i,v:chk=chk+v
120 NEXT
130 IF chk<>VAL("&"+RIGHT$(byte$,3)) THEN PRINT"ERROR in LINE";ln:STOP
140 ln=ln+10:NEXT
150 DATA D603C032C09132C491DD7E0432634
160 DATA BE91DD7E0232C291DD6E00DD666BF
170 DATA 01E5DDE17E47B7C8DD6E01DD66777
180 DATA 0211C8917EFE3A3804CBAFD6075B5
190 DATA D630CD2CBC12132310ED21C79257A
200 DATA 22C691DD21B791CDC6BBCDF0BB885
210 DATA CD2CBCDD7700CDC6BBCD11BCF57E6
220 DATA CCB291F1F5DCB291F1DCB291CB9EF
230 DATA 3CCB1DCD1DBCDDCB01C6DDCB046E5
240 DATA C6FD21BE913EFF329691CB01306C5
250 DATA 012BCD9591CD8C9128F3E5CD296FF
260 DATA BC22B991E1E5CD26BC22BC91E17ED
270 DATA FD21BE913E01CD9791CB0930115B6
280 DATA 23E52AB9912322B9912ABC91235A5
290 DATA 22BC91E1CD8C91C25E917CE6C080D
300 DATA EEC0C0E521C891ED5BBE913AC4862
310 DATA 9147B728031910FDED5BC09119592
320 DATA 7EE1A14779EEFFA6B077E53AC485D
330 DATA 91F5F53EFFFD21C291CD9791FD91B
340 DATA 21B891CD1891F132C4913E01FD694
350 DATA 21C291CD9791FD21BB91CD1891749
360 DATA F132C491E11884FD6E01FD66026C6
370 DATA CD8C912805FDCB00C6C9FDCB00736
380 DATA 46FDCB0086C8FD2AC691113A6C691
390 DATA FDE5FD19FDE1D8FD7500FD7401892
400 DATA FD71023AC491FD77033AC091FD6FE
410 DATA 7704110500FD19FD22C691C92A510
420 DATA C691E5FDE111C892AFED52D81185C
430 DATA FBFFFD19FD22C691FD6E00FD66854
440 DATA 01FD4E02FD7E0332C491FD7E045D2
450 DATA 32C091C36E9079A64779DDA6006A6
460 DATA A8C93E00FD8602CB7F2808FD7E629
470 DATA 003DFD7702C9FD7702FD9600D865D
480 DATA FD360200C9CB3ACB1BC90000004B2
