10 '         Basic Checksum
20 '        By R.A.Waddilove
30 ' (c) Computing with the Amstrad
40 MEMORY &8FFF
50 address=&9000
60 FOR i=0 TO 25
70 sum=0:READ code$,check$
80 FOR j=1 TO 23 STEP 2
90 byte=VAL("&"+MID$(code$,j,2))
100 POKE address,byte
110 sum=sum+byte:address=address+1
120 NEXT
130 IF sum<>VAL("&"+check$) THEN PRINT"Error in line";180+i*10
140 NEXT
150 PRINT"Call &9000 for checksums"
160 END
170 :
180 DATA cd27910c5072657373205350,461
190 DATA 41434520666f722063686563,3e3
200 DATA 6b73756d732c204553432074,3ee
210 DATA 6f20656e640d0a0a00fd2170,375
220 DATA 01fd5e00fd56017ab3c8fde5,687
230 DATA dde1dd19fd6e02fd66030600,58d
240 DATA cdb1903e20cd5abb3e3dcd5a,5f0
250 DATA bb3e20cd5abbfdbe04cae190,6f5
260 DATA ddbefeca05913efcfd8600fd,7b3
270 DATA 86014fcd8f90eb0601cdb190,5c2
280 DATA dde5fde13e0acd5abb3e0dcd,6e2
290 DATA 5abbcd06bbfefcc23190c911,6fa
300 DATA 00007afdae045706087a1730,34f
310 DATA 087aee08577bee105fcb13cb,550
320 DATA 1210eefd230d20e2c9111027,450
330 DATA cdce9011e803cdce90116400,5c7
340 DATA cdce901e0acdce903e3085c3,634
350 DATA 5abb3e2fa7043ced5230fa19,4eb
360 DATA 05c25abb3e20c35abbcd2791,597
370 DATA 457874726120737061636573,4a3
380 DATA 206174207374617274206f66,438
390 DATA 206c696e650d0a00c9cd2791,42d
400 DATA 457874726120737061636573,4a3
410 DATA 20617420656e64206f66206c,3cd
420 DATA 696e650d0a00c9e17ecd5abb,55d
430 DATA 23b720f8e900000000000000,2db
